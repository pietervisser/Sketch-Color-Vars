@import "functions.js"

/** Variables
 ---------------------------------------------------------*/
var app = NSApplication.sharedApplication();
var header = '/*! Sketch-Color-Vars v1.3.1 | MIT License | github.com/pietervisser/Sketch-Color-Vars.git */';
var file_path = '';
var color_array = [];
var str_scss = header + "\n";


/** onRun Event
 ---------------------------------------------------------*/
var onRun = function(context) {
  var doc = context.document;
  var selectedLayers = context.selection;
  var selectedCount = selectedLayers.count();
	var fileTypes = ["scss"];

	var panel = [NSOpenPanel openPanel];
  [panel setCanChooseDirectories:true];
  [panel setCanCreateDirectories:true];
	[panel setAllowedFileTypes:fileTypes];
  panel.setPrompt('Export Color Variables');

  var clicked = [panel runModal];

  if (clicked == NSFileHandlingPanelOKButton) {
    var isDirectory = true;
    var firstURL = [[panel URLs] objectAtIndex:0];
    file_path = [NSString stringWithFormat:@'%@', firstURL];

    if (0 === file_path.indexOf('file://'))
      file_path = file_path.substring(7);
  }

  if (selectedCount == 0) {
    doc.showMessage('Please selected at least one layer.');
  } else {
    for (var i = 0; i < selectedCount; i++) {
      var layer = selectedLayers[i];
      var layer_name = layer.name();
      var color = String(firstVisibleFill(layer).color());

      color = color.replace('r:', '');
      color = color.replace('g:', '');
      color = color.replace('b:', '');
      color = color.replace('a:', '');
      color = color.replace('(', '');
      color = color.replace(')', '');

      color_array = color.split(" ");

      var red = Math.round(color_array[0] * 100) + '%';
      var green = Math.round(color_array[1] * 100) + '%';
      var blue = Math.round(color_array[2] * 100) + '%';
      var alpha = parseFloat(color_array[3]).toFixed(2);

      str_scss += "$" + layer_name + ": rgba(";
      str_scss += red + "," + green + "," + blue + "," + alpha + "); ";
      str_scss += "\n";
    }
  }

	var output = [
		[str_scss, 'scss']
	];

	for (z = 0; z < output.length; z++) {
		writeFile(output[z][0], output[z][1]);
	}

	var alertMessage = '_colors.scss saved to: ' + file_path;
  alert('Color Variables Exported!', alertMessage);
};
